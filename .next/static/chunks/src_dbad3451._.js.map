{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/app-v2.0/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\r\n\r\nfunction Skeleton({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) {\r\n  return (\r\n    <div\r\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Skeleton }\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf;KAVS","debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/app-v2.0/src/components/protected-route.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useAuth } from '@/contexts/auth-context';\r\nimport { Skeleton } from '@/components/ui/skeleton';\r\n\r\ninterface ProtectedRouteProps {\r\n  children: React.ReactNode;\r\n  requiredRole?: 'user' | 'admin';\r\n}\r\n\r\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children, requiredRole }) => {\r\n  const { user, loading } = useAuth();\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      if (!user) {\r\n        router.replace('/login');\r\n      } else if (requiredRole && user.role !== requiredRole) {\r\n        // If role is required and doesn't match, redirect based on actual role\r\n        if (user.role === 'admin') {\r\n          router.replace('/admin');\r\n        } else {\r\n          router.replace('/dashboard');\r\n        }\r\n      }\r\n    }\r\n  }, [user, loading, requiredRole, router]);\r\n\r\n  if (loading || !user || (requiredRole && user.role !== requiredRole && !loading)) {\r\n    return (\r\n      <div className=\"space-y-6 p-6\">\r\n        <Skeleton className=\"h-10 w-1/3\" />\r\n        <Skeleton className=\"h-32 w-full\" />\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          <Skeleton className=\"h-20 w-full\" />\r\n          <Skeleton className=\"h-20 w-full\" />\r\n        </div>\r\n        <Skeleton className=\"h-40 w-full\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAYA,MAAM,iBAAgD,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE;;IAC/E,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,sIAAA,CAAA,UAAO,AAAD;IAChC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,IAAI,CAAC,SAAS;gBACZ,IAAI,CAAC,MAAM;oBACT,OAAO,OAAO,CAAC;gBACjB,OAAO,IAAI,gBAAgB,KAAK,IAAI,KAAK,cAAc;oBACrD,uEAAuE;oBACvE,IAAI,KAAK,IAAI,KAAK,SAAS;wBACzB,OAAO,OAAO,CAAC;oBACjB,OAAO;wBACL,OAAO,OAAO,CAAC;oBACjB;gBACF;YACF;QACF;mCAAG;QAAC;QAAM;QAAS;QAAc;KAAO;IAExC,IAAI,WAAW,CAAC,QAAS,gBAAgB,KAAK,IAAI,KAAK,gBAAgB,CAAC,SAAU;QAChF,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC,uIAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;8BACpB,6LAAC,uIAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;8BACpB,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,uIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,6LAAC,uIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;;;;;;;8BAEtB,6LAAC,uIAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;;;;;;;IAG1B;IAEA,qBAAO;kBAAG;;AACZ;GAlCM;;QACsB,sIAAA,CAAA,UAAO;QAClB,qIAAA,CAAA,YAAS;;;KAFpB;uCAoCS","debugId":null}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/app-v2.0/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/app-v2.0/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/app-v2.0/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n)\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n))\r\nLabel.displayName = LabelPrimitive.Root.displayName\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/app-v2.0/src/components/CreateAccountForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Label } from '@/components/ui/label';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default function CreateAccountForm() {\r\n  const [form, setForm] = useState({\r\n    userId: '',\r\n    accountNumber: '',\r\n    holderName: '',\r\n    balance: '',\r\n    currency: '',\r\n    type: ''\r\n  });\r\n  const [userDetails, setUserDetails] = useState({\r\n    username: '',\r\n    password: '',\r\n    name: '',\r\n    email: '',\r\n    contact: '',\r\n    address: ''\r\n  });\r\n  const [showUserForm, setShowUserForm] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const { toast } = useToast();\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleUserChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserDetails({ ...userDetails, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const checkUserExists = async (userId: string) => {\r\n    try {\r\n      const res = await fetch(`/api/users/${userId}`);\r\n      return res.ok;\r\n    } catch {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const createUser = async () => {\r\n    const { username, password, name, email, contact, address } = userDetails;\r\n    try {\r\n      const res = await fetch('/api/users', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          id: form.userId,\r\n          username,\r\n          password,\r\n          role: 'user',\r\n          name,\r\n          email,\r\n          contact,\r\n          address\r\n        })\r\n      });\r\n      return res.ok;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (isSubmitting) return;\r\n\r\n    const { userId, accountNumber, holderName, balance, currency, type } = form;\r\n    if (!userId || !accountNumber || !holderName || !balance || !currency || !type) {\r\n      toast({ title: 'Missing Fields', description: 'Please fill all the fields.', variant: 'destructive' });\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    try {\r\n      const exists = await checkUserExists(userId);\r\n      if (!exists && !showUserForm) {\r\n        setShowUserForm(true);\r\n        toast({ title: 'User Not Found', description: 'Please provide user details to create a new user.' });\r\n        setIsSubmitting(false);\r\n        return;\r\n      }\r\n\r\n      if (!exists && showUserForm) {\r\n        const created = await createUser();\r\n        if (!created) {\r\n          toast({ title: 'User Creation Failed', description: 'Unable to create user.', variant: 'destructive' });\r\n          setIsSubmitting(false);\r\n          return;\r\n        }\r\n      }\r\n\r\n      const res = await fetch('/api/upload-accounts', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify([\r\n          {\r\n            id: uuidv4(),\r\n            userId,\r\n            accountNumber,\r\n            holderName,\r\n            balance: parseFloat(balance),\r\n            currency,\r\n            type,\r\n            transactions: []\r\n          }\r\n        ])\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        toast({ title: 'Success', description: data.message });\r\n        setForm({ userId: '', accountNumber: '', holderName: '', balance: '', currency: '', type: '' });\r\n        setUserDetails({ username: '', password: '', name: '', email: '', contact: '', address: '' });\r\n        setShowUserForm(false);\r\n      } else {\r\n        toast({ title: 'Error', description: data.message || 'Something went wrong.', variant: 'destructive' });\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast({ title: 'Error', description: 'Failed to create account.', variant: 'destructive' });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"max-w-xl mx-auto mt-8 shadow-lg\">\r\n      <CardHeader>\r\n        <CardTitle>Create New Account</CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <Label>User ID</Label>\r\n            <Input name=\"userId\" value={form.userId} onChange={handleChange} required />\r\n          </div>\r\n          <div>\r\n            <Label>Account Number</Label>\r\n            <Input name=\"accountNumber\" value={form.accountNumber} onChange={handleChange} required />\r\n          </div>\r\n          <div>\r\n            <Label>Holder Name</Label>\r\n            <Input name=\"holderName\" value={form.holderName} onChange={handleChange} required />\r\n          </div>\r\n          <div>\r\n            <Label>Balance</Label>\r\n            <Input name=\"balance\" type=\"number\" step=\"0.01\" value={form.balance} onChange={handleChange} required />\r\n          </div>\r\n          <div>\r\n            <Label>Currency</Label>\r\n            <Input name=\"currency\" value={form.currency} onChange={handleChange} required />\r\n          </div>\r\n          <div>\r\n            <Label>Type</Label>\r\n            <Input name=\"type\" value={form.type} onChange={handleChange} required />\r\n          </div>\r\n\r\n          {showUserForm && (\r\n            <>\r\n              <hr className=\"my-4\" />\r\n              <h3 className=\"font-semibold text-primary\">Create New User</h3>\r\n              <div>\r\n                <Label>Username</Label>\r\n                <Input name=\"username\" value={userDetails.username} onChange={handleUserChange} required />\r\n              </div>\r\n              <div>\r\n                <Label>Password</Label>\r\n                <Input name=\"password\" type=\"password\" value={userDetails.password} onChange={handleUserChange} required />\r\n              </div>\r\n              <div>\r\n                <Label>Name</Label>\r\n                <Input name=\"name\" value={userDetails.name} onChange={handleUserChange} required />\r\n              </div>\r\n              <div>\r\n                <Label>Email</Label>\r\n                <Input name=\"email\" type=\"email\" value={userDetails.email} onChange={handleUserChange} required />\r\n              </div>\r\n              <div>\r\n                <Label>Contact</Label>\r\n                <Input name=\"contact\" value={userDetails.contact} onChange={handleUserChange} />\r\n              </div>\r\n              <div>\r\n                <Label>Address</Label>\r\n                <Input name=\"address\" value={userDetails.address} onChange={handleUserChange} />\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          <Button type=\"submit\" disabled={isSubmitting}>\r\n            {isSubmitting ? 'Creating...' : 'Create Account'}\r\n          </Button>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 899, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/app-v2.0/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Table = React.forwardRef<\r\n  HTMLTableElement,\r\n  React.HTMLAttributes<HTMLTableElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-auto\">\r\n    <table\r\n      ref={ref}\r\n      className={cn(\"w-full caption-bottom text-sm\", className)}\r\n      {...props}\r\n    />\r\n  </div>\r\n))\r\nTable.displayName = \"Table\"\r\n\r\nconst TableHeader = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\r\n))\r\nTableHeader.displayName = \"TableHeader\"\r\n\r\nconst TableBody = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tbody\r\n    ref={ref}\r\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableBody.displayName = \"TableBody\"\r\n\r\nconst TableFooter = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableFooter.displayName = \"TableFooter\"\r\n\r\nconst TableRow = React.forwardRef<\r\n  HTMLTableRowElement,\r\n  React.HTMLAttributes<HTMLTableRowElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tr\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableRow.displayName = \"TableRow\"\r\n\r\nconst TableHead = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.ThHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <th\r\n    ref={ref}\r\n    className={cn(\r\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableHead.displayName = \"TableHead\"\r\n\r\nconst TableCell = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.TdHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <td\r\n    ref={ref}\r\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCell.displayName = \"TableCell\"\r\n\r\nconst TableCaption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  React.HTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <caption\r\n    ref={ref}\r\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCaption.displayName = \"TableCaption\"\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1037, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/app-v2.0/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\r\nimport { DayPicker } from \"react-day-picker\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/components/ui/button\"\r\n\r\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\r\n\r\nfunction Calendar({\r\n  className,\r\n  classNames,\r\n  showOutsideDays = true,\r\n  ...props\r\n}: CalendarProps) {\r\n  return (\r\n    <DayPicker\r\n      showOutsideDays={showOutsideDays}\r\n      className={cn(\"p-3\", className)}\r\n      classNames={{\r\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\r\n        month: \"space-y-4\",\r\n        caption: \"flex justify-center pt-1 relative items-center\",\r\n        caption_label: \"text-sm font-medium\",\r\n        nav: \"space-x-1 flex items-center\",\r\n        nav_button: cn(\r\n          buttonVariants({ variant: \"outline\" }),\r\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\r\n        ),\r\n        nav_button_previous: \"absolute left-1\",\r\n        nav_button_next: \"absolute right-1\",\r\n        table: \"w-full border-collapse space-y-1\",\r\n        head_row: \"flex\",\r\n        head_cell:\r\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\r\n        row: \"flex w-full mt-2\",\r\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\r\n        day: cn(\r\n          buttonVariants({ variant: \"ghost\" }),\r\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\r\n        ),\r\n        day_range_end: \"day-range-end\",\r\n        day_selected:\r\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\r\n        day_today: \"bg-accent text-accent-foreground\",\r\n        day_outside:\r\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\r\n        day_disabled: \"text-muted-foreground opacity-50\",\r\n        day_range_middle:\r\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\r\n        day_hidden: \"invisible\",\r\n        ...classNames,\r\n      }}\r\n      components={{\r\n        IconLeft: ({ className, ...props }) => (\r\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\r\n        ),\r\n        IconRight: ({ className, ...props }) => (\r\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\r\n        ),\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\nCalendar.displayName = \"Calendar\"\r\n\r\nexport { Calendar }\r\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAEA;AACA;AAPA;;;;;;AAWA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,qBACE,6LAAC,iKAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,6LAAC,yNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACC,GAAG,KAAK;;;;;;AAGf;KAvDS;AAwDT,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1123, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/app-v2.0/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Popover = PopoverPrimitive.Root\r\n\r\nconst PopoverTrigger = PopoverPrimitive.Trigger\r\n\r\nconst PopoverContent = React.forwardRef<\r\n  React.ElementRef<typeof PopoverPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\r\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\r\n  <PopoverPrimitive.Portal>\r\n    <PopoverPrimitive.Content\r\n      ref={ref}\r\n      align={align}\r\n      sideOffset={sideOffset}\r\n      className={cn(\r\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </PopoverPrimitive.Portal>\r\n))\r\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\r\n\r\nexport { Popover, PopoverTrigger, PopoverContent }\r\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,sKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,sKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC,sKAAA,CAAA,SAAuB;kBACtB,cAAA,6LAAC,sKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,sKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1171, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/app-v2.0/src/components/date-picker-with-range.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { format } from \"date-fns\"\r\nimport type { DateRange } from \"react-day-picker\"\r\nimport { Calendar as CalendarIcon } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Calendar } from \"@/components/ui/calendar\"\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/components/ui/popover\"\r\n\r\ninterface DatePickerWithRangeProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  date: DateRange | undefined;\r\n  setDate: (date: DateRange | undefined) => void;\r\n}\r\n\r\nexport function DatePickerWithRange({\r\n  className,\r\n  date,\r\n  setDate\r\n}: DatePickerWithRangeProps) {\r\n\r\n  return (\r\n    <div className={cn(\"grid gap-2\", className)}>\r\n      <Popover>\r\n        <PopoverTrigger asChild>\r\n          <Button\r\n            id=\"date\"\r\n            variant={\"outline\"}\r\n            className={cn(\r\n              \"w-full justify-start text-left font-normal\",\r\n              !date && \"text-muted-foreground\"\r\n            )}\r\n          >\r\n            <CalendarIcon className=\"mr-2 h-4 w-4\" />\r\n            {date?.from ? (\r\n              date.to ? (\r\n                <>\r\n                  {format(date.from, \"LLL dd, y\")} -{\" \"}\r\n                  {format(date.to, \"LLL dd, y\")}\r\n                </>\r\n              ) : (\r\n                format(date.from, \"LLL dd, y\")\r\n              )\r\n            ) : (\r\n              <span>Pick a date range</span>\r\n            )}\r\n          </Button>\r\n        </PopoverTrigger>\r\n        <PopoverContent className=\"w-auto p-0\" align=\"start\">\r\n          <Calendar\r\n            initialFocus\r\n            mode=\"range\"\r\n            defaultMonth={date?.from}\r\n            selected={date}\r\n            onSelect={setDate}\r\n            numberOfMonths={2}\r\n          />\r\n        </PopoverContent>\r\n      </Popover>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AAEA;AAEA;AACA;AACA;AACA;AAVA;;;;;;;;AAqBO,SAAS,oBAAoB,EAClC,SAAS,EACT,IAAI,EACJ,OAAO,EACkB;IAEzB,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;kBAC/B,cAAA,6LAAC,sIAAA,CAAA,UAAO;;8BACN,6LAAC,sIAAA,CAAA,iBAAc;oBAAC,OAAO;8BACrB,cAAA,6LAAC,qIAAA,CAAA,SAAM;wBACL,IAAG;wBACH,SAAS;wBACT,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8CACA,CAAC,QAAQ;;0CAGX,6LAAC,6MAAA,CAAA,WAAY;gCAAC,WAAU;;;;;;4BACvB,MAAM,OACL,KAAK,EAAE,iBACL;;oCACG,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,KAAK,IAAI,EAAE;oCAAa;oCAAG;oCAClC,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,KAAK,EAAE,EAAE;;+CAGnB,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,KAAK,IAAI,EAAE,6BAGpB,6LAAC;0CAAK;;;;;;;;;;;;;;;;;8BAIZ,6LAAC,sIAAA,CAAA,iBAAc;oBAAC,WAAU;oBAAa,OAAM;8BAC3C,cAAA,6LAAC,uIAAA,CAAA,WAAQ;wBACP,YAAY;wBACZ,MAAK;wBACL,cAAc,MAAM;wBACpB,UAAU;wBACV,UAAU;wBACV,gBAAgB;;;;;;;;;;;;;;;;;;;;;;AAM5B;KA9CgB","debugId":null}},
    {"offset": {"line": 1277, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/app-v2.0/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Select = SelectPrimitive.Root\r\n\r\nconst SelectGroup = SelectPrimitive.Group\r\n\r\nconst SelectValue = SelectPrimitive.Value\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n))\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\r\n\r\nconst SelectScrollUpButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronUp className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollUpButton>\r\n))\r\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\r\n\r\nconst SelectScrollDownButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronDown className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollDownButton>\r\n))\r\nSelectScrollDownButton.displayName =\r\n  SelectPrimitive.ScrollDownButton.displayName\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, position = \"popper\", ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        position === \"popper\" &&\r\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n        className\r\n      )}\r\n      position={position}\r\n      {...props}\r\n    >\r\n      <SelectScrollUpButton />\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\r\n          \"p-1\",\r\n          position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\r\n        )}\r\n      >\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n      <SelectScrollDownButton />\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n))\r\nSelectContent.displayName = SelectPrimitive.Content.displayName\r\n\r\nconst SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n))\r\nSelectItem.displayName = SelectPrimitive.Item.displayName\r\n\r\nconst SelectSeparator = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n  SelectScrollUpButton,\r\n  SelectScrollDownButton,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1492, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/app-v2.0/src/components/CreateTransactionForm.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Select, SelectTrigger, SelectValue, SelectContent, SelectItem } from '@/components/ui/select';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { format } from 'date-fns';\r\n\r\nexport default function CreateTransactionForm() {\r\n  const [accounts, setAccounts] = useState<any[]>([]);\r\n  const [form, setForm] = useState({\r\n    accountId: '',\r\n    date: format(new Date(), 'yyyy-MM-dd'),\r\n    description: '',\r\n    amount: '',\r\n    currency: '',\r\n    type: 'credit',\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const { toast } = useToast();\r\n\r\n  useEffect(() => {\r\n    async function fetchAccounts() {\r\n      try {\r\n        const res = await fetch('/api/accounts');\r\n        const data = await res.json();\r\n        setAccounts(data);\r\n      } catch (err) {\r\n        console.error('Error loading accounts:', err);\r\n        toast({ title: 'Error', description: 'Could not load accounts.', variant: 'destructive' });\r\n      }\r\n    }\r\n    fetchAccounts();\r\n  }, []);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (isSubmitting) return;\r\n\r\n    const { accountId, date, description, amount, currency, type } = form;\r\n    if (!accountId || !date || !amount || !currency || !type) {\r\n      toast({ title: 'Missing Fields', description: 'Please fill all required fields.', variant: 'destructive' });\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    try {\r\n      const res = await fetch('/api/transactions', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          id: uuidv4(),\r\n          accountId,\r\n          date,\r\n          description,\r\n          amount: parseFloat(amount),\r\n          currency,\r\n          type,\r\n        }),\r\n      });\r\n\r\n      if (res.ok) {\r\n        toast({ title: 'Success', description: 'Transaction added successfully.' });\r\n        setForm({ accountId: '', date: format(new Date(), 'yyyy-MM-dd'), description: '', amount: '', currency: '', type: 'credit' });\r\n      } else {\r\n        const error = await res.json();\r\n        toast({ title: 'Error', description: error.message || 'Failed to add transaction.', variant: 'destructive' });\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast({ title: 'Error', description: 'Failed to add transaction.', variant: 'destructive' });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"max-w-xl mx-auto mt-8 shadow-lg\">\r\n      <CardHeader>\r\n        <CardTitle>Add New Transaction</CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <Label>Select Account</Label>\r\n            <Select\r\n              value={form.accountId}\r\n              onValueChange={(value) => setForm({ ...form, accountId: value })}\r\n            >\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Choose an account...\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {accounts.map((acc) => (\r\n                  <SelectItem key={acc.id} value={acc.id}>\r\n                    {acc.holderName} ({acc.accountNumber})\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <div>\r\n            <Label>Date</Label>\r\n            <Input name=\"date\" type=\"date\" value={form.date} onChange={handleChange} required />\r\n          </div>\r\n\r\n          <div>\r\n            <Label>Description</Label>\r\n            <Input name=\"description\" value={form.description} onChange={handleChange} />\r\n          </div>\r\n\r\n          <div>\r\n            <Label>Amount</Label>\r\n            <Input name=\"amount\" type=\"number\" step=\"0.01\" value={form.amount} onChange={handleChange} required />\r\n          </div>\r\n\r\n          <div>\r\n            <Label>Currency</Label>\r\n            <Input name=\"currency\" value={form.currency} onChange={handleChange} required />\r\n          </div>\r\n\r\n          <div>\r\n            <Label>Type</Label>\r\n            <Select value={form.type} onValueChange={(val) => setForm({ ...form, type: val })}>\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select type...\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"credit\">Credit</SelectItem>\r\n                <SelectItem value=\"debit\">Debit</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <Button type=\"submit\" disabled={isSubmitting}>\r\n            {isSubmitting ? 'Adding...' : 'Add Transaction'}\r\n          </Button>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1908, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/app-v2.0/src/components/UploadTransactionForm.tsx"],"sourcesContent":["// components/UploadTransactionsForm.tsx\r\n\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport default function UploadTransactionsForm() {\r\n  const [file, setFile] = useState<File | null>(null);\r\n  const { toast } = useToast();\r\n\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFile(e.target.files?.[0] || null);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) {\r\n      toast({ title: \"No file selected\", description: \"Please select a CSV file.\", variant: \"destructive\" });\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = async (e) => {\r\n      const content = e.target?.result as string;\r\n      const lines = content.split(/\\r?\\n/).filter(line => line.trim() !== \"\");\r\n      const headers = lines[0].split(',').map(h => h.trim());\r\n      const expected = ['id','date','description','amount','type','currency','accountId'];\r\n      const missing = expected.filter(col => !headers.includes(col));\r\n      if (missing.length > 0) {\r\n        toast({ title: \"Invalid CSV\", description: `Missing columns: ${missing.join(\", \")}`, variant: \"destructive\" });\r\n        return;\r\n      }\r\n\r\n      const transactions = lines.slice(1).map((line, index) => {\r\n        const values = line.split(',').map(v => v.trim());\r\n        const tx: any = {};\r\n        headers.forEach((h, i) => tx[h] = values[i]);\r\n        tx.amount = parseFloat(tx.amount);\r\n        tx.id = tx.id || uuidv4(); // auto generate if missing\r\n        return tx;\r\n      });\r\n\r\n      try {\r\n        const res = await fetch('/api/upload-transactions', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({transactions})\r\n        });\r\n\r\n        const data = await res.json();\r\n        if (res.ok) {\r\n          toast({ title: \"Success\", description: data.message || \"Transactions uploaded successfully.\" });\r\n        } else {\r\n          toast({ title: \"Upload Failed\", description: data.message || \"Something went wrong.\", variant: \"destructive\" });\r\n        }\r\n      } catch (err) {\r\n        toast({ title: \"Error\", description: \"Failed to upload transactions.\", variant: \"destructive\" });\r\n        console.error(err);\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-3\">\r\n      <Input type=\"file\" accept=\".csv\" onChange={handleFileChange} />\r\n      <Button onClick={handleUpload}>Upload Transactions</Button>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"AAAA,wCAAwC;;;;;AAGxC;AACA;AACA;AACA;AACA;;;AANA;;;;;;AAQe,SAAS;;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAEzB,MAAM,mBAAmB,CAAC;QACxB,QAAQ,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI;IACjC;IAEA,MAAM,eAAe;QACnB,IAAI,CAAC,MAAM;YACT,MAAM;gBAAE,OAAO;gBAAoB,aAAa;gBAA6B,SAAS;YAAc;YACpG;QACF;QAEA,MAAM,SAAS,IAAI;QACnB,OAAO,MAAM,GAAG,OAAO;YACrB,MAAM,UAAU,EAAE,MAAM,EAAE;YAC1B,MAAM,QAAQ,QAAQ,KAAK,CAAC,SAAS,MAAM,CAAC,CAAA,OAAQ,KAAK,IAAI,OAAO;YACpE,MAAM,UAAU,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAA,IAAK,EAAE,IAAI;YACnD,MAAM,WAAW;gBAAC;gBAAK;gBAAO;gBAAc;gBAAS;gBAAO;gBAAW;aAAY;YACnF,MAAM,UAAU,SAAS,MAAM,CAAC,CAAA,MAAO,CAAC,QAAQ,QAAQ,CAAC;YACzD,IAAI,QAAQ,MAAM,GAAG,GAAG;gBACtB,MAAM;oBAAE,OAAO;oBAAe,aAAa,CAAC,iBAAiB,EAAE,QAAQ,IAAI,CAAC,OAAO;oBAAE,SAAS;gBAAc;gBAC5G;YACF;YAEA,MAAM,eAAe,MAAM,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM;gBAC7C,MAAM,SAAS,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,CAAA,IAAK,EAAE,IAAI;gBAC9C,MAAM,KAAU,CAAC;gBACjB,QAAQ,OAAO,CAAC,CAAC,GAAG,IAAM,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE;gBAC3C,GAAG,MAAM,GAAG,WAAW,GAAG,MAAM;gBAChC,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,CAAA,GAAA,wLAAA,CAAA,KAAM,AAAD,KAAK,2BAA2B;gBACtD,OAAO;YACT;YAEA,IAAI;gBACF,MAAM,MAAM,MAAM,MAAM,4BAA4B;oBAClD,QAAQ;oBACR,SAAS;wBAAE,gBAAgB;oBAAmB;oBAC9C,MAAM,KAAK,SAAS,CAAC;wBAAC;oBAAY;gBACpC;gBAEA,MAAM,OAAO,MAAM,IAAI,IAAI;gBAC3B,IAAI,IAAI,EAAE,EAAE;oBACV,MAAM;wBAAE,OAAO;wBAAW,aAAa,KAAK,OAAO,IAAI;oBAAsC;gBAC/F,OAAO;oBACL,MAAM;wBAAE,OAAO;wBAAiB,aAAa,KAAK,OAAO,IAAI;wBAAyB,SAAS;oBAAc;gBAC/G;YACF,EAAE,OAAO,KAAK;gBACZ,MAAM;oBAAE,OAAO;oBAAS,aAAa;oBAAkC,SAAS;gBAAc;gBAC9F,QAAQ,KAAK,CAAC;YAChB;QACF;QACA,OAAO,UAAU,CAAC;IACpB;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,oIAAA,CAAA,QAAK;gBAAC,MAAK;gBAAO,QAAO;gBAAO,UAAU;;;;;;0BAC3C,6LAAC,qIAAA,CAAA,SAAM;gBAAC,SAAS;0BAAc;;;;;;;;;;;;AAGrC;GA9DwB;;QAEJ,+HAAA,CAAA,WAAQ;;;KAFJ","debugId":null}},
    {"offset": {"line": 2051, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/app-v2.0/src/components/UploadUsersForm.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { useToast } from '@/hooks/use-toast';\r\n\r\nexport default function UploadUsersForm() {\r\n  const [file, setFile] = useState<File | null>(null);\r\n  const { toast } = useToast();\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    const res = await fetch('/api/upload-users', {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n\r\n    if (res.ok) {\r\n      toast({ title: 'Success', description: 'Users uploaded successfully!' });\r\n    } else {\r\n      const data = await res.json();\r\n      toast({ title: 'Error', description: data.error || 'Failed to upload users', variant: 'destructive' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <Input type=\"file\" accept=\".csv\" onChange={e => setFile(e.target.files?.[0] || null)} />\r\n      <Button onClick={handleUpload}>Upload Users CSV</Button>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAOe,SAAS;;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAEzB,MAAM,eAAe;QACnB,IAAI,CAAC,MAAM;QAEX,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,QAAQ;QAExB,MAAM,MAAM,MAAM,MAAM,qBAAqB;YAC3C,QAAQ;YACR,MAAM;QACR;QAEA,IAAI,IAAI,EAAE,EAAE;YACV,MAAM;gBAAE,OAAO;gBAAW,aAAa;YAA+B;QACxE,OAAO;YACL,MAAM,OAAO,MAAM,IAAI,IAAI;YAC3B,MAAM;gBAAE,OAAO;gBAAS,aAAa,KAAK,KAAK,IAAI;gBAA0B,SAAS;YAAc;QACtG;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,oIAAA,CAAA,QAAK;gBAAC,MAAK;gBAAO,QAAO;gBAAO,UAAU,CAAA,IAAK,QAAQ,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI;;;;;;0BAC/E,6LAAC,qIAAA,CAAA,SAAM;gBAAC,SAAS;0BAAc;;;;;;;;;;;;AAGrC;GA7BwB;;QAEJ,+HAAA,CAAA,WAAQ;;;KAFJ","debugId":null}},
    {"offset": {"line": 2136, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/app-v2.0/src/app/admin/page.tsx"],"sourcesContent":["\r\n\"use client\";\r\n\r\nimport React, { useState, useMemo, useEffect } from 'react';\r\nimport ProtectedRoute from '@/components/protected-route';\r\nimport CreateAccountForm from '@/components/CreateAccountForm';\r\nimport type { Account, UserDetail, Transaction } from '@/types';\r\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { DatePickerWithRange } from '@/components/date-picker-with-range';\r\nimport type { DateRange } from 'react-day-picker';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Download, FileSpreadsheet, FileText, Upload, Users, Filter, ShieldAlert, Loader2, User, Mail, Phone, Home as HomeIcon, ListChecks } from 'lucide-react';\r\nimport { format } from 'date-fns';\r\nimport CreateTransactionForm from '@/components/CreateTransactionForm';\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport UploadTransactionForm from '@/components/UploadTransactionForm';\r\nimport { useAuth } from '@/contexts/auth-context';\r\nimport UploadUsersForm from '@/components/UploadUsersForm';\r\n\r\n\r\n\r\n\r\nexport default function AdminPage() {\r\n \r\n  const [allAccounts, setAllAccounts] = useState<Account[]>([]);\r\n  const [allUsers, setAllUsers] = useState<UserDetail[]>([]);\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const { user } = useAuth();\r\n  const [confirmChange, setConfirmChange] = useState(false);\r\n\r\nconst fetchAccounts = async () => {\r\n  try {\r\n    const res = await fetch('/api/accounts');\r\n    const rawData = await res.json();\r\n\r\n    const parsedData = rawData.map((acc: any) => ({\r\n      ...acc,\r\n      balance: parseFloat(acc.balance),\r\n      transactions: (acc.transactions || []).map((tx: any) => ({\r\n        id: tx.id || tx.transactionId,\r\n        date: tx.date,\r\n        description: tx.description,\r\n        amount: parseFloat(tx.amount),\r\n        type: tx.type || tx.transactionType,\r\n        currency: tx.currency || tx.transactionCurrency,\r\n      })),\r\n    }));\r\n\r\n    setAllAccounts(parsedData);\r\n  } catch (err) {\r\n    console.error('Error loading accounts:', err);\r\n    toast({\r\n      title: \"Error\",\r\n      description: \"Unable to load accounts from server.\",\r\n      variant: \"destructive\",\r\n    });\r\n  }\r\n};\r\n\r\nuseEffect(() => {\r\n  fetchAccounts();\r\n}, []);\r\n\r\n\r\n  \r\n\r\nconst fetchUsers = async () => {\r\n  try {\r\n    const res = await fetch('/api/users');\r\n    if (!res.ok) throw new Error('Failed to fetch users');\r\n    const data = await res.json();\r\n    setAllUsers(data);\r\n  } catch (err) {\r\n    console.error('Error loading users:', err);\r\n    toast({\r\n      title: \"Error\",\r\n      description: \"Unable to load users from server.\",\r\n      variant: \"destructive\",\r\n    });\r\n  }\r\n};\r\n\r\nuseEffect(() => {\r\n  fetchUsers();\r\n}, []);\r\n\r\n  \r\n  \r\n  const [dateRangeGlobal, setDateRangeGlobal] = useState<DateRange | undefined>(undefined); // For global account view (if used for filtering creation date)\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  \r\n  const [file, setFile] = useState<File | null>(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  \r\n  const [selectedUserId, setSelectedUserId] = useState<string | undefined>(undefined);\r\n  const [dateRangeForSelectedUser, setDateRangeForSelectedUser] = useState<DateRange | undefined>(undefined);\r\n\r\n  const { toast } = useToast();\r\n\r\n  // Memoized data for global accounts view\r\n  const filteredGlobalAccounts = useMemo(() => {\r\n    let accounts = allAccounts;\r\n    if (searchTerm) {\r\n      accounts = accounts.filter(acc => \r\n        acc.holderName.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        acc.accountNumber.includes(searchTerm) ||\r\n        acc.userId.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n    // dateRangeGlobal could be applied here if accounts have a creation date field\r\n    return accounts;\r\n  }, [allAccounts, searchTerm]);\r\n\r\n  // Memoized data for selected user view\r\n  const selectedUserDetail = useMemo(() => {\r\n    return allUsers.find(u => u.id === selectedUserId);\r\n  }, [allUsers, selectedUserId]);\r\n\r\n  const selectedUserAccounts = useMemo(() => {\r\n    if (!selectedUserId) return [];\r\n    return allAccounts.filter(acc => acc.userId === selectedUserId);\r\n  }, [allAccounts, selectedUserId]);\r\n\r\n  const filteredTransactionsForSelectedUser = useMemo(() => {\r\n    if (!selectedUserAccounts || selectedUserAccounts.length === 0) return [];\r\n    \r\n    let transactions: Transaction[] = [];\r\n    selectedUserAccounts.forEach(account => {\r\n      transactions = transactions.concat(account.transactions.map(tx => ({...tx, accountId: account.id, accountNumber: account.accountNumber}))); // Add account info to tx\r\n    });\r\n\r\n    if (dateRangeForSelectedUser?.from) {\r\n      transactions = transactions.filter(t => new Date(t.date) >= dateRangeForSelectedUser.from!);\r\n    }\r\n    if (dateRangeForSelectedUser?.to) {\r\n      transactions = transactions.filter(t => {\r\n        const transactionDate = new Date(t.date);\r\n        const toDate = new Date(dateRangeForSelectedUser.to!);\r\n        toDate.setHours(23, 59, 59, 999); // Include full end day\r\n        return transactionDate <= toDate;\r\n      });\r\n    }\r\n    return transactions.sort((a,b) => new Date(b.date).getTime() - new Date(a.date).getTime());\r\n  }, [selectedUserAccounts, dateRangeForSelectedUser]);\r\n\r\n\r\n  const downloadFile = (content: string, fileName: string, mimeType: string) => {\r\n    const blob = new Blob([content], { type: mimeType });\r\n    const link = document.createElement('a');\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = fileName;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(link.href);\r\n    toast({ title: \"Download Started\", description: `${fileName} is downloading.` });\r\n  };\r\n\r\n  const handleGlobalDownload = (formatType: 'csv' | 'txt') => {\r\n    if (filteredGlobalAccounts.length === 0) {\r\n      toast({ title: \"No Data\", description: \"No accounts to download.\", variant: \"default\" });\r\n      return;\r\n    }\r\n    if (formatType === 'csv') {\r\n      const headers = [\"User ID\", \"Account Number\", \"Holder Name\", \"Type\", \"Balance\", \"Currency\", \"Account ID\"];\r\n      const csvContent = [\r\n        headers.join(','),\r\n        ...filteredGlobalAccounts.map(acc => \r\n          [acc.userId, acc.accountNumber, acc.holderName, acc.type, acc.balance.toFixed(2), acc.currency, acc.id].join(',')\r\n        )\r\n      ].join('\\n');\r\n      downloadFile(csvContent, 'all_user_accounts_data.csv', 'text/csv;charset=utf-8;');\r\n    } else if (formatType === 'txt') {\r\n      let content = `Admin Report - All User Accounts\\nGenerated on: ${new Date().toLocaleDateString()}\\n\\n`;\r\n      content += \"User ID,Account Number,Holder Name,Type,Balance,Currency,Account ID\\n\";\r\n      filteredGlobalAccounts.forEach(acc => {\r\n        content += `${acc.userId},${acc.accountNumber},${acc.holderName},${acc.type},${acc.balance.toFixed(2)},${acc.currency},${acc.id}\\n`;\r\n      });\r\n      content += \"\\n\\n--- End of Report ---\";\r\n      downloadFile(content, 'all_user_accounts_report.txt', 'text/plain;charset=utf-8;');\r\n    }\r\n  };\r\n\r\n  const handleDownloadForSelectedUser = (formatType: 'csv' | 'txt') => {\r\n    if (!selectedUserDetail || !selectedUserAccounts) {\r\n      toast({ title: \"No User Selected\", description: \"Please select a user to download their data.\", variant: \"default\" });\r\n      return;\r\n    }\r\n    if (filteredTransactionsForSelectedUser.length === 0 && formatType === 'csv') {\r\n        toast({ title: \"No Transactions\", description: `No transactions found for ${selectedUserDetail.name} within the selected date range to include in CSV.`, variant: \"default\" });\r\n        // Allow TXT report even with no transactions\r\n    }\r\n\r\n\r\n    const userNameSafe = selectedUserDetail.name.replace(/[^a-z0-9]/gi, '_').toLowerCase();\r\n\r\n    if (formatType === 'csv') {\r\n      if (filteredTransactionsForSelectedUser.length === 0) return; // Already toasted\r\n      const headers = [\"Transaction ID\", \"Date\", \"Description\", \"Amount\", \"Currency\", \"Type\", \"Account ID\", \"Account Number\"];\r\n      const csvContent = [\r\n        headers.join(','),\r\n        ...filteredTransactionsForSelectedUser.map(tx => \r\n          [\r\n            tx.id,\r\n            format(new Date(tx.date), 'yyyy-MM-dd'), \r\n            `\"${(tx.description || '').replace(/\"/g, '\"\"')}\"`,\r\n            tx.amount.toFixed(2), \r\n            tx.currency, \r\n            tx.type,\r\n            (tx as any).accountId, // Assuming accountId was added\r\n            (tx as any).accountNumber // Assuming accountNumber was added\r\n          ].join(',')\r\n        )\r\n      ].join('\\n');\r\n      downloadFile(csvContent, `user_${userNameSafe}_transactions.csv`, 'text/csv;charset=utf-8;');\r\n    } else if (formatType === 'txt') {\r\n      let content = `User Report: ${selectedUserDetail.name} (ID: ${selectedUserDetail.id})\\n`;\r\n      content += `Email: ${selectedUserDetail.email}\\n`;\r\n      if (selectedUserDetail.contact) content += `Contact: ${selectedUserDetail.contact}\\n`;\r\n      if (selectedUserDetail.address) content += `Address: ${selectedUserDetail.address}\\n`;\r\n      content += `Report Generated on: ${new Date().toLocaleDateString()}\\n\\n`;\r\n\r\n      content += \"Associated Accounts:\\n\";\r\n      if (selectedUserAccounts.length > 0) {\r\n        selectedUserAccounts.forEach(acc => {\r\n          content += `  - Account Number: ${acc.accountNumber}\\n`;\r\n          content += `    Type: ${acc.type}\\n`;\r\n          content += `    Balance: ${acc.balance.toFixed(2)} ${acc.currency}\\n`;\r\n          content += `    Account ID: ${acc.id}\\n\\n`;\r\n        });\r\n      } else {\r\n        content += \"  No accounts found for this user.\\n\\n\";\r\n      }\r\n      \r\n      content += `Transactions Report (${dateRangeForSelectedUser?.from ? format(dateRangeForSelectedUser.from, 'MMM dd, yyyy') : 'Start'} - ${dateRangeForSelectedUser?.to ? format(dateRangeForSelectedUser.to, 'MMM dd, yyyy') : 'End'}):\\n`;\r\n      if (filteredTransactionsForSelectedUser.length > 0) {\r\n        content += \"Date,Description,Amount,Currency,Type,Account Number\\n\";\r\n        filteredTransactionsForSelectedUser.forEach(tx => {\r\n          content += `${format(new Date(tx.date), 'yyyy-MM-dd')},\"${(tx.description || '').replace(/\"/g, '\"\"')}\",${tx.amount.toFixed(2)},${tx.currency},${tx.type},${(tx as any).accountNumber}\\n`;\r\n        });\r\n      } else {\r\n        content += \"No transactions found for the selected criteria.\\n\";\r\n      }\r\n      content += \"\\n\\n--- End of Report ---\";\r\n      downloadFile(content, `user_${userNameSafe}_detailed_report.txt`, 'text/plain;charset=utf-8;');\r\n    }\r\n  };\r\n\r\n\r\n  const handleFileUpload = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!file) {\r\n      toast({ title: \"No file selected\", description: \"Please select a CSV file to upload.\", variant: \"destructive\" });\r\n      return;\r\n    }\r\n    setIsUploading(true);\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = async (event) => {\r\n      const csvData = event.target?.result as string;\r\n      if (!csvData) {\r\n        toast({ title: \"Error reading file\", description: \"Could not read file content.\", variant: \"destructive\" });\r\n        setIsUploading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const lines = csvData.split(/\\r\\n|\\n/).filter(line => line.trim() !== ''); \r\n        if (lines.length < 2) {\r\n          toast({ title: \"Invalid CSV\", description: \"CSV file must have a header and at least one data row.\", variant: \"destructive\" });\r\n          setIsUploading(false);\r\n          return;\r\n        }\r\n\r\n        const headers = lines[0].split(',').map(h => h.trim());\r\n        const requiredHeaders = ['id', 'accountNumber', 'holderName', 'balance', 'currency', 'type', 'userId'];\r\n        const missingHeaders = requiredHeaders.filter(rh => !headers.includes(rh));\r\n        \r\n        if (missingHeaders.length > 0) {\r\n            toast({ title: \"Invalid CSV Header\", description: `Missing columns: ${missingHeaders.join(', ')}. Expected: ${requiredHeaders.join(', ')}`, variant: \"destructive\" });\r\n            setIsUploading(false);\r\n            return;\r\n        }\r\n\r\n        const newAccountsFromCsv: Account[] = [];\r\n        let parsingErrors = 0;\r\n\r\n        for (let i = 1; i < lines.length; i++) {\r\n          const values = lines[i].split(',').map(v => v.trim());\r\n          if (values.length !== headers.length) {\r\n            console.warn(`Skipping malformed row ${i+1}: ${lines[i]}`);\r\n            parsingErrors++;\r\n            continue;\r\n          }\r\n          \r\n          const accountDataRow: Record<string, string> = {};\r\n          headers.forEach((header, index) => {\r\n            accountDataRow[header] = values[index];\r\n          });\r\n\r\n          const balance = parseFloat(accountDataRow.balance);\r\n          if (isNaN(balance)) {\r\n            console.warn(`Skipping row ${i+1} due to invalid balance: ${lines[i]}`);\r\n            toast({ title: \"Parsing Warning\", description: `Invalid balance for account ${accountDataRow.accountNumber || `in row ${i+1}`} in CSV. Row skipped.`, variant:  \"default\" });\r\n            parsingErrors++;\r\n            continue;\r\n          }\r\n\r\n          if (!accountDataRow.id || !accountDataRow.accountNumber || !accountDataRow.holderName || !accountDataRow.currency || !accountDataRow.type || !accountDataRow.userId) {\r\n            console.warn(`Skipping row ${i+1} due to missing required fields: ${lines[i]}`);\r\n            toast({ title: \"Parsing Warning\", description: `Missing required fields for an account in row ${i+1} of CSV. Row skipped.`, variant: \"default\" });\r\n            parsingErrors++;\r\n            continue;\r\n          }\r\n\r\n          const newAccount: Account = {\r\n            id: accountDataRow.id,\r\n            accountNumber: accountDataRow.accountNumber,\r\n            holderName: accountDataRow.holderName,\r\n            balance: balance,\r\n            currency: accountDataRow.currency,\r\n            type: accountDataRow.type,\r\n            userId: accountDataRow.userId,\r\n            transactions: [], \r\n          };\r\n          newAccountsFromCsv.push(newAccount);\r\n        }\r\n\r\n                await fetch('/api/upload-accounts', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(newAccountsFromCsv),\r\n        });\r\n\r\n        \r\n        if (newAccountsFromCsv.length === 0 && lines.length > 1 && parsingErrors === (lines.length -1) ) {\r\n            toast({ title: \"No Valid Data\", description: \"No valid account data found in the CSV after the header, or all rows had errors.\", variant: \"destructive\" });\r\n            setIsUploading(false);\r\n            return;\r\n        }\r\n        \r\n        let toastQueue: { title: string; description: string; variant?: \"default\" | \"destructive\"; duration?: number }[] = [];\r\n\r\nsetAllAccounts((prevAccounts: Account[]) => {\r\n  const accountsMap = new Map<string, Account>(prevAccounts.map(acc => [acc.id, acc]));\r\n  let updatedMatchingDataCount = 0;\r\n  let skippedMismatchDataCount = 0;\r\n  let newAccountsAddedCount = 0;\r\n\r\n  newAccountsFromCsv.forEach(csvAcc => {\r\n    const existingAccount = accountsMap.get(csvAcc.id);\r\n\r\n    if (existingAccount) {\r\n      const coreFieldsMatch =\r\n        existingAccount.accountNumber === csvAcc.accountNumber &&\r\n        existingAccount.holderName === csvAcc.holderName &&\r\n        existingAccount.balance === csvAcc.balance &&\r\n        existingAccount.currency === csvAcc.currency &&\r\n        existingAccount.type === csvAcc.type &&\r\n        existingAccount.userId === csvAcc.userId;\r\n\r\n      if (coreFieldsMatch) {\r\n        accountsMap.set(csvAcc.id, csvAcc); // reset\r\n        updatedMatchingDataCount++;\r\n      } else {\r\n        skippedMismatchDataCount++;\r\n      }\r\n    } else {\r\n      accountsMap.set(csvAcc.id, csvAcc);\r\n      newAccountsAddedCount++;\r\n    }\r\n  });\r\n\r\n  const messageParts: string[] = [];\r\n  if (newAccountsAddedCount > 0) messageParts.push(`${newAccountsAddedCount} new accounts added`);\r\n  if (updatedMatchingDataCount > 0) messageParts.push(`${updatedMatchingDataCount} updated`);\r\n  if (skippedMismatchDataCount > 0) messageParts.push(`${skippedMismatchDataCount} skipped`);\r\n\r\n  toastQueue.push({\r\n    title: \"CSV Upload Processed\",\r\n    description: `Processed ${newAccountsFromCsv.length} rows. ${messageParts.join(', ')}`,\r\n    duration: 8000\r\n  });\r\n\r\n  return Array.from(accountsMap.values());\r\n});\r\n\r\n// ✅ Flush toasts after state update\r\nsetTimeout(() => {\r\n  toastQueue.forEach(t => toast(t));\r\n}, 0);\r\n\r\n\r\n      } catch (error) {\r\n        console.error(\"Error processing CSV:\", error);\r\n        toast({ title: \"Processing Error\", description: `Failed to process the CSV file. ${error instanceof Error ? error.message : ''}`, variant: \"destructive\" });\r\n      } finally {\r\n        setIsUploading(false);\r\n        setFile(null);\r\n        const fileInput = document.getElementById('excel-upload') as HTMLInputElement;\r\n        if (fileInput) fileInput.value = '';\r\n      }\r\n    };\r\n    reader.onerror = () => {\r\n        toast({ title: \"File Read Error\", description: \"Could not read the selected file.\", variant: \"destructive\" });\r\n        setIsUploading(false);\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  return (\r\n    <ProtectedRoute requiredRole=\"admin\">\r\n      <div className=\"space-y-8\">\r\n        <Card className=\"shadow-lg\">\r\n          <CardHeader>\r\n            <CardTitle className=\"text-2xl font-semibold text-primary flex items-center\">\r\n              <ShieldAlert className=\"mr-3 h-7 w-7\" /> Admin Dashboard\r\n            </CardTitle>\r\n            <CardDescription>Manage user accounts, view user details, download reports, and upload data.</CardDescription>\r\n          </CardHeader>\r\n        </Card>\r\n        \r\n        <Card className=\"shadow-lg\">\r\n          <CardHeader>\r\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n                <div className=\"flex-1\">\r\n                    <CardTitle className=\"text-xl font-semibold text-primary flex items-center\">\r\n                        <Users className=\"mr-2 h-6 w-6\" /> All User Accounts (Global View)\r\n                    </CardTitle>\r\n                    <Button variant=\"ghost\" size=\"sm\" className=\"ml-auto mt-2\" onClick={fetchAccounts}>\r\n                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> Refresh Accounts\r\n                    </Button>\r\n\r\n                    <CardDescription>View and filter account data across all users. Download aggregated reports.</CardDescription>\r\n                </div>\r\n                <div className=\"w-full md:w-auto md:min-w-[300px]\">\r\n                    <Input \r\n                        type=\"text\"\r\n                        placeholder=\"Search by name, account #, user ID...\"\r\n                        value={searchTerm}\r\n                        onChange={(e) => setSearchTerm(e.target.value)}\r\n                        className=\"text-sm\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            \r\n          </CardHeader>\r\n          <CardContent>\r\n            {filteredGlobalAccounts.length > 0 ? (\r\n            <div className=\"overflow-x-auto\">\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead>User ID</TableHead>\r\n                    <TableHead>Account Number</TableHead>\r\n                    <TableHead>Holder Name</TableHead>\r\n                    <TableHead>Type</TableHead>\r\n                    <TableHead className=\"text-right\">Balance</TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {filteredGlobalAccounts.map(acc => (\r\n                    <TableRow key={acc.id}>\r\n                      <TableCell>{acc.userId}</TableCell>\r\n                      <TableCell>{acc.accountNumber}</TableCell>\r\n                      <TableCell>{acc.holderName}</TableCell>\r\n                      <TableCell>{acc.type}</TableCell>\r\n                      <TableCell className=\"text-right font-medium\">{acc.balance.toFixed(2)} {acc.currency}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n            ) : (\r\n                 <p className=\"text-muted-foreground text-center py-4\">No accounts found matching your criteria.</p>\r\n            )}\r\n          </CardContent>\r\n          <CardFooter className=\"flex flex-col sm:flex-row justify-end gap-2 pt-4\">\r\n            <Button variant=\"outline\" onClick={() => handleGlobalDownload('csv')} disabled={filteredGlobalAccounts.length === 0}>\r\n              <FileSpreadsheet className=\"mr-2 h-5 w-5\" /> Download All Accounts (CSV)\r\n            </Button>\r\n            <Button variant=\"outline\" onClick={() => handleGlobalDownload('txt')} disabled={filteredGlobalAccounts.length === 0}>\r\n              <FileText className=\"mr-2 h-5 w-5\" /> Download All Accounts (TXT)\r\n            </Button>\r\n          </CardFooter>\r\n        </Card>\r\n\r\n        <Card className=\"shadow-lg\">\r\n  <CardHeader>\r\n    <CardTitle className=\"text-xl font-semibold text-primary flex items-center\">\r\n      <ListChecks className=\"mr-2 h-6 w-6\" /> All Transactions (Global View)\r\n    <Button variant=\"ghost\" size=\"sm\" onClick={fetchAccounts}>\r\n      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> Refresh Transactions\r\n    </Button>\r\n    </CardTitle>\r\n    <CardDescription>Browse all transactions across all users and accounts.</CardDescription>\r\n  </CardHeader>\r\n  <CardContent>\r\n    {allAccounts.length > 0 ? (\r\n      <div className=\"overflow-x-auto max-h-[400px] border rounded-md\">\r\n        <Table>\r\n          <TableHeader>\r\n            <TableRow>\r\n              <TableHead>Date</TableHead>\r\n              <TableHead>Description</TableHead>\r\n              <TableHead>Account Number</TableHead>\r\n              <TableHead>Holder Name</TableHead>\r\n              <TableHead className=\"text-right\">Amount</TableHead>\r\n              <TableHead>Type</TableHead>\r\n            </TableRow>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {allAccounts.flatMap(account =>\r\n              account.transactions?.map((tx, i) => (\r\n                <TableRow key={tx.id + i}>\r\n                  <TableCell>{format(new Date(tx.date), 'MMM dd, yyyy')}</TableCell>\r\n                  <TableCell>{tx.description}</TableCell>\r\n                  <TableCell>{account.accountNumber}</TableCell>\r\n                  <TableCell>{account.holderName}</TableCell>\r\n                  <TableCell className={`text-right font-medium ${tx.type === 'credit' ? 'text-green-600' : 'text-red-600'}`}>\r\n                    {tx.amount.toFixed(2)} {tx.currency}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <span className={`px-2 py-1 text-xs rounded-full ${tx.type === 'credit' ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'}`}>\r\n                      {tx.type}\r\n                    </span>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    ) : (\r\n      <p className=\"text-muted-foreground text-center py-4\">No transactions found.</p>\r\n    )}\r\n  </CardContent>\r\n</Card>\r\n\r\n\r\n        <Card className=\"shadow-lg\">\r\n          <CardHeader>\r\n            <CardTitle className=\"text-xl font-semibold text-primary flex items-center\">\r\n                <User className=\"mr-2 h-6 w-6\" /> View & Download Specific User Data\r\n            </CardTitle>\r\n            \r\n\r\n            <CardDescription>Select a user to view their profile, accounts, and download their specific data reports.</CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-6\">\r\n            <div>\r\n              <Label htmlFor=\"select-user\" className=\"text-sm font-medium\">Select User</Label>\r\n              <Select value={selectedUserId} onValueChange={setSelectedUserId}>\r\n                <SelectTrigger id=\"select-user\" className=\"w-full md:w-1/2 mt-1\">\r\n                  <SelectValue placeholder=\"Select a user...\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  {allUsers.map(user => (\r\n                    <SelectItem key={user.id} value={user.id}>\r\n                      {user.name} (@{user.username}) - ID: {user.id}\r\n                    </SelectItem>\r\n                  ))}\r\n                </SelectContent>\r\n              </Select>\r\n            </div>\r\n\r\n            {selectedUserDetail && (\r\n              <div className=\"space-y-6 pt-4 border-t\">\r\n                <section>\r\n                  <h3 className=\"text-lg font-semibold text-primary mb-2 flex items-center\"><User className=\"mr-2 h-5 w-5\"/>Profile Information</h3>\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-x-4 gap-y-2 text-sm\">\r\n                    <p><strong className=\"text-muted-foreground\">Name:</strong> {selectedUserDetail.name}</p>\r\n                    <p><strong className=\"text-muted-foreground\">Username:</strong> @{selectedUserDetail.username}</p>\r\n                    <p><Mail className=\"inline mr-1 h-4 w-4 text-muted-foreground\" /> <strong className=\"text-muted-foreground\">Email:</strong> {selectedUserDetail.email}</p>\r\n                    {selectedUserDetail.contact && <p><Phone className=\"inline mr-1 h-4 w-4 text-muted-foreground\" /> <strong className=\"text-muted-foreground\">Contact:</strong> {selectedUserDetail.contact}</p>}\r\n                    {selectedUserDetail.address && <p className=\"md:col-span-2\"><HomeIcon className=\"inline mr-1 h-4 w-4 text-muted-foreground\" /> <strong className=\"text-muted-foreground\">Address:</strong> {selectedUserDetail.address}</p>}\r\n                  </div>\r\n                </section>\r\n\r\n                <section>\r\n                  <h3 className=\"text-lg font-semibold text-primary mb-2 flex items-center\"><ListChecks className=\"mr-2 h-5 w-5\"/>User Accounts</h3>\r\n                  {selectedUserAccounts.length > 0 ? (\r\n                    <div className=\"overflow-x-auto\">\r\n                    <Table>\r\n                      <TableHeader>\r\n                        <TableRow>\r\n                          <TableHead>Account ID</TableHead>\r\n                          <TableHead>Account Number</TableHead>\r\n                          <TableHead>Type</TableHead>\r\n                          <TableHead className=\"text-right\">Balance</TableHead>\r\n                        </TableRow>\r\n                      </TableHeader>\r\n                      <TableBody>\r\n                        {selectedUserAccounts.map(acc => (\r\n                          <TableRow key={acc.id}>\r\n                            <TableCell>{acc.id}</TableCell>\r\n                            <TableCell>{acc.accountNumber}</TableCell>\r\n                            <TableCell>{acc.type}</TableCell>\r\n                            <TableCell className=\"text-right font-medium\">{acc.balance.toFixed(2)} {acc.currency}</TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                    </div>\r\n                  ) : (\r\n                    <p className=\"text-muted-foreground\">No accounts found for this user.</p>\r\n                  )}\r\n\r\n                        {selectedUserDetail && (\r\n                          <section className=\"border-t pt-4\">\r\n                          <h3 className=\"text-lg font-semibold text-primary mb-2\">🔐 Change Password for This User</h3>\r\n                          <div className=\"space-y-4\">\r\n                            <Input\r\n                              type=\"password\"\r\n                              placeholder=\"Enter new password\"\r\n                              value={newPassword}\r\n                              onChange={(e) => setNewPassword(e.target.value)}\r\n                              disabled={!selectedUserDetail}\r\n                            />\r\n                            <label className=\"flex items-center space-x-2\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                checked={confirmChange}\r\n                                onChange={(e) => setConfirmChange(e.target.checked)}\r\n                              />\r\n                              <span className=\"text-sm text-muted-foreground\">I confirm I want to change this user's password.</span>\r\n                            </label>\r\n                            <Button\r\n                              variant=\"destructive\"\r\n                              disabled={!newPassword || !confirmChange || !selectedUserDetail}\r\n                              onClick={async () => {\r\n                                const confirm = window.confirm(\r\n                                  `Are you sure you want to change the password for \"${selectedUserDetail?.name}\"?`\r\n                                );\r\n                                if (!confirm) return;\r\n                              \r\n                                const res = await fetch('/api/admin/change-user-password', {\r\n                                  method: 'POST',\r\n                                  headers: { 'Content-Type': 'application/json' },\r\n                                  body: JSON.stringify({\r\n                                    adminId: user?.id,\r\n                                    targetUserId: selectedUserId,\r\n                                    newPassword,\r\n                                  }),\r\n                                });\r\n                              \r\n                                const data = await res.json();\r\n                                toast({\r\n                                  title: data.success ? \"Success\" : \"Error\",\r\n                                  description: data.message,\r\n                                  variant: data.success ? \"default\" : \"destructive\",\r\n                                });\r\n                              \r\n                                if (data.success) {\r\n                                  setNewPassword('');\r\n                                  setConfirmChange(false);\r\n                                }\r\n                              }}\r\n                            >\r\n                              Update Password\r\n                            </Button>\r\n                          </div>\r\n                        </section>\r\n                        )}                        \r\n                </section>\r\n\r\n                <section>\r\n                  <h3 className=\"text-lg font-semibold text-primary mb-2 flex items-center\"><Filter className=\"mr-2 h-5 w-5\"/>Filter Transactions for Report</h3>\r\n                  <DatePickerWithRange date={dateRangeForSelectedUser} setDate={setDateRangeForSelectedUser} />\r\n                </section>\r\n                \r\n                <section>\r\n                     <h3 className=\"text-lg font-semibold text-primary mb-3 flex items-center\"><Download className=\"mr-2 h-5 w-5\"/>Download User Data</h3>\r\n                     {filteredTransactionsForSelectedUser.length > 0 ? (\r\n                        <div className=\"overflow-x-auto max-h-96 border rounded-md\">\r\n                            <Table>\r\n                                <TableHeader>\r\n                                    <TableRow>\r\n                                        <TableHead>Date</TableHead>\r\n                                        <TableHead>Description</TableHead>\r\n                                        <TableHead>Account</TableHead>\r\n                                        <TableHead className=\"text-right\">Amount</TableHead>\r\n                                        <TableHead>Type</TableHead>\r\n                                    </TableRow>\r\n                                </TableHeader>\r\n                                <TableBody>\r\n                                    {filteredTransactionsForSelectedUser.map(tx => (\r\n                                        <TableRow key={tx.id + (tx as any).accountId}>\r\n                                            <TableCell>{format(new Date(tx.date), 'MMM dd, yyyy')}</TableCell>\r\n                                            <TableCell>{tx.description}</TableCell>\r\n                                            <TableCell>{(tx as any).accountNumber?.slice(-4)}</TableCell>\r\n                                            <TableCell className={`text-right font-medium ${tx.type === 'credit' ? 'text-green-600' : 'text-red-600'}`}>\r\n                                                {tx.amount.toFixed(2)} {tx.currency}\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <span className={`px-2 py-1 text-xs rounded-full ${tx.type === 'credit' ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'}`}>\r\n                                                    {tx.type}\r\n                                                </span>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </div>\r\n                     ) : (\r\n                        <p className=\"text-muted-foreground text-center py-4\">\r\n                            {selectedUserAccounts.length > 0 ? \"No transactions found for the selected user and date range.\" : \"User has no accounts to show transactions for.\"}\r\n                        </p>\r\n                     )}\r\n                </section>\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n          {selectedUserDetail && (\r\n            <CardFooter className=\"flex flex-col sm:flex-row justify-end gap-2 pt-4 border-t\">\r\n              <Button variant=\"outline\" onClick={() => handleDownloadForSelectedUser('csv')} disabled={filteredTransactionsForSelectedUser.length === 0}>\r\n                <FileSpreadsheet className=\"mr-2 h-5 w-5\" /> Download User Transactions (CSV)\r\n              </Button>\r\n              <Button variant=\"outline\" onClick={() => handleDownloadForSelectedUser('txt')}>\r\n                <FileText className=\"mr-2 h-5 w-5\" /> Download User Report (TXT)\r\n              </Button>\r\n            </CardFooter>\r\n          )}\r\n        </Card>\r\n          \r\n          <Card className=\"shadow-lg\">\r\n          <CardHeader>\r\n            <CardTitle className=\"text-xl font-semibold text-primary flex items-center\">\r\n              <Upload className=\"mr-2 h-6 w-6\" /> Add Manual Transaction\r\n            </CardTitle>\r\n            <CardDescription>Use the form below to manually add a transaction to any account.</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <CreateTransactionForm />\r\n          </CardContent>\r\n        </Card>\r\n\r\n\r\n        <Card className=\"shadow-lg\">\r\n          <CardHeader>\r\n            <CardTitle className=\"text-xl font-semibold text-primary flex items-center\">\r\n              <Upload className=\"mr-2 h-6 w-6\" /> Upload Transactions from CSV\r\n            </CardTitle>\r\n            <CardDescription>Upload a CSV file with multiple transactions for bulk entry.</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <UploadTransactionForm />\r\n          </CardContent>\r\n        </Card>\r\n\r\n\r\n        <Card className=\"shadow-lg\">\r\n          <CardHeader>\r\n            <CardTitle className=\"text-xl font-semibold text-primary flex items-center\">\r\n                <Upload className=\"mr-2 h-6 w-6\" /> Create New Account\r\n            </CardTitle>\r\n            <CardDescription>Fill the form to add a new account for an existing user.</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <CreateAccountForm />\r\n          </CardContent>\r\n        </Card>\r\n        \r\n        <Card>\r\n          <CardHeader><CardTitle>Bulk Upload Users</CardTitle></CardHeader>\r\n          <CardContent><UploadUsersForm /></CardContent>\r\n        </Card>\r\n\r\n\r\n\r\n\r\n      </div>\r\n\r\n\r\n\r\n    </ProtectedRoute>\r\n  );\r\n}\r\n    \r\n"],"names":[],"mappings":"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","debugId":null}}]
}